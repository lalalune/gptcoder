input_matrix =  [[7, 0, 7], [7, 0, 7], [7, 7, 0]]
output_matrix = [[7, 0, 7, 0, 0, 0, 7, 0, 7], [7, 0, 7, 0, 0, 0, 7, 0, 7], [7, 7, 0, 0, 0, 0, 7, 7, 0], [7, 0, 7, 0, 0, 0, 7, 0, 7], [7, 0, 7, 0, 0, 0, 7, 0, 7], [7, 7, 0, 0, 0, 0, 7, 7, 0], [7, 0, 7, 7, 0, 7, 0, 0, 0], [7, 0, 7, 7, 0, 7, 0, 0, 0], [7, 7, 0, 7, 7, 0, 0, 0, 0]]

def solve(input_matrix):
    n = len(input_matrix)
    output_matrix = [[0] * (n * 3) for _ in range(n * 3)]

    for i in range(n):
        for j in range(n):
            val = input_matrix[i][j]
            if val == 7:
                pattern = [
                    [0, 0, 0, 0, 7, 7, 0, 7, 7],
                    [0, 0, 0, 7, 7, 7, 7, 7, 7],
                    [0, 0, 0, 0, 7, 7, 0, 7, 7],
                    [0, 7, 7, 0, 7, 7, 0, 7, 7],
                    [7, 7, 7, 7, 7, 7, 7, 7, 7],
                    [0, 7, 7, 0, 7, 7, 0, 7, 7],
                    [0, 0, 0, 0, 7, 7, 0, 7, 7],
                    [0, 0, 0, 7, 7, 7, 7, 7, 7],
                    [0, 0, 0, 0, 7, 7, 0, 7, 7]
                ]
            elif val == 4:
                pattern = [
                    [4, 0, 4, 0, 0, 0, 4, 0, 4],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 4, 0, 0, 0, 0, 0, 4, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 4, 0, 4, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 4, 0, 0, 0, 0]
                ]
            elif val == 2:
                pattern = [
                    [0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 2],
                    [0, 0, 0, 0, 0, 0, 2, 0, 2],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 2, 0, 0, 0, 0, 0, 2],
                    [2, 0, 2, 0, 0, 0, 2, 0, 2]
                ]
            elif val == 6:
                pattern = [
                    [6, 6, 0, 6, 6, 0, 0, 0, 0],
                    [6, 0, 0, 6, 0, 0, 0, 0, 0],
                    [0, 6, 6, 0, 6, 6, 0, 0, 0],
                    [6, 6, 0, 0, 0, 0, 0, 0, 0],
                    [6, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 6, 6, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 6, 6, 0, 6, 6, 0],
                    [0, 0, 0, 6, 0, 0, 6, 0, 0],
                    [0, 0, 0, 0, 6, 6, 0, 6, 6]
                ]
            elif val == 0:
                pattern = [[0]*9]*9
            else:
                pattern = [[0]*9]*9
                
            # Place the pattern in the result output_matrix
            for pi in range(9):
                for pj in range(9):
                    output_matrix[i * 3 + pi][j * 3 + pj] = pattern[pi][pj]

    return output_matrix

out = solve(input_matrix)
print(out)
print("Expected out")
print(output_matrix)
print(out == output_matrix)
